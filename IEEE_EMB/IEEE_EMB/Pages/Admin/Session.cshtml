@page
@model IEEE_EMB.Pages.Admin.SessionModel
@{
}
@{
    Layout = "~/Pages/Shared/DashLayout.cshtml";
}


<div class="container-xxl flex-grow-1 container-p-y">
    <!-- Add Session Button -->
    @if (Model.db.GetActivityType(Model.ActivityId) == "Seminar" && Model.db.GetSessionCount(Model.ActivityId) >= 1)
    {
        
    }
    else
    { 
        <div class="mb-4">

            <a href="/Admin/AddSession?ActivityId=@Model.ActivityId" class="btn btn-primary">Add Session</a>
        </div>
    }
    

    <div class="card">
        <h5 class="card-header">All Sessions</h5>
        <div class="table-responsive text-nowrap">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Date</th>
                        <th>Document</th>
                        <th>Video</th>
                        <th>Task</th>
                        <th>Task Answer</th>

                    </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                    <!-- Example for displaying Session data (populate dynamically) -->

                    @for(int i = 0; i < Model.sessions.Rows.Count; i++)
                    {
                        
                            <tr>
                                <td><strong>@Model.sessions.Rows[i][2]</strong></td>
                            <td><strong>@Model.sessions.Rows[i][1]</strong></td>
                            
                            <td><strong><a href="~/Documents/@Model.sessions.Rows[i][7]">Document</a></strong></td>
                            <td><strong><a href="~/videos/@Model.sessions.Rows[i][6]">Video</a></strong></td>
                            <td><strong><a href="~/videos/@Model.sessions.Rows[i]["TASK"]">Task</a></strong></td>
                            @if (Model.sessions.Rows[i]["TASK_ANSWER"] != DBNull.Value)

                            {
                                
                                <td><strong><a href="~/TaskAnswer/@Model.sessions.Rows[i]["TASK_ANSWER"]">Task Answer</a></strong></td>
                            }
                            else
                            {
                                <td><strong><a href="/Admin/TaskAnswer?SessionId=@Model.sessions.Rows[i][0]">Add Task Answer</a></strong></td>

                            }

                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">
                                        <a class="dropdown-item" href="/Admin/EditSession?SessionId=@Model.sessions.Rows[i][0]">
                                                <i class="bx bx-edit-alt me-1"></i> Edit
                                            </a>
                                        <a class="dropdown-item delete-btn"
                                           data-bs-toggle="modal"
                                           data-bs-target="#dataModal"
                                           data-item-id="@Model.sessions.Rows[i][0]"
                                           data-item-name="@Model.sessions.Rows[i][2]"
                                           activityId="@Model.sessions.Rows[i][5]">
                                            <i class="bx bx-trash me-1"></i> Delete
                                        </a>
                                      
                                            @* <a class="dropdown-item delete-btn"
                                               href="javascript:void(0);"
                                               data-id="@Model.sessions.Rows[i][0]"
                                               data-title="@Model.sessions.Rows[i][2]"
                                               activityId="@Model.sessions.Rows[i][5]">
                                                <i class="bx bx-trash me-1"></i> Delete
                                            </a> *@
                                        </div>
                                    </div>
                                </td>
                            </tr>    
                    }
                    <div class="modal fade" id="dataModal" tabindex="-1" aria-labelledby="dataModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="dataModalLabel">Confirm Deletion</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <form method="post" asp-page-handler="Delete">
                                    <div class="modal-body">
                                        <p>Are you sure you want to delete <strong id="itemNamePlaceholder"></strong>?</p>

                                        <input type="hidden" id="itemIdInput" name="sessionId" value="">
                                        <input type="hidden" id="activityIdInput" name="activityId" value="">

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-primary">Confirm</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                  
                  
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const deleteButtons = document.querySelectorAll('.delete-btn');
            const itemNamePlaceholder = document.getElementById('itemNamePlaceholder');
            const itemIdInput = document.getElementById('itemIdInput');
            const activityIdInput = document.getElementById('activityIdInput');


            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    // Get the item name and ID from the button's data attributes
                    const itemName = button.getAttribute('data-item-name');
                    const itemId = button.getAttribute('data-item-id');
                    const activityId = button.getAttribute('activityId');

                    // Update the modal content with the item name and ID
                    if (itemNamePlaceholder) {
                        itemNamePlaceholder.textContent = itemName;
                    }
                    if (itemIdInput) {
                        itemIdInput.value = itemId;
                    }
                    if (activityIdInput) {
                        activityIdInput.value = activityId;
                    }
                 
                });
            });
        });
    </script>
}




























<!-- Hidden form to generate CSRF token -->
@* <form id="csrf-form" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <!-- Include SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.delete-btn');

            // Inject ActivityId from Razor model into JavaScript

            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const Id = button.getAttribute('data-id');
                    const SubjectName = button.getAttribute('data-title');
                    const activityid = button.getAttribute('activityId');

                    Swal.fire({
                        title: `Are you sure you want to delete "${SubjectName}"?`,
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: `"${SubjectName}" has been successfully deleted.`,
                                icon: 'success'
                            }).then(() => {
                                // Redirect to the Razor Page with both sessionId and activityId in the query string
                                //window.location.href = `/Admin/Session?handler=Delete&sessionId=${Id}&activityId=${activityid}`;
                                $.ajax({
                                    type: "POST",
                                    url: window.location.href + '?handler=Delete', // Razor Pages handler URL
                                    data: {
                                        sessionId: Id,
                                        activityId: activityid,
                                        __RequestVerificationToken: document.querySelector('input[name="__RequestVerificationToken"]').value
                                    },
                                    success: function () {
                                        console.log("Deleted successfully from Razor Page");
                                    },
                                    error: function (error) {
                                        console.error("Error:", error);
                                        console.log("Id: " + Id + " and activityId: " + activityid);
                                    }
                                });

                                console.log("Id: " + Id + " and activityId: " + activityid)
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire(
                                'Cancelled',
                                `"${SubjectName}" is safe.`,
                                'error'
                            );
                        }
                    });
                });
            });
        });
    </script>
}


 *@

@* @section Scripts {
    <!-- Include SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.delete-btn');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const Id = button.getAttribute('data-id');
                    const SubjectName = button.getAttribute('data-name');


                    Swal.fire({
                        title: `Are you sure you want to delete "${SubjectName}"?`,
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: `"${SubjectName}" has been successfully deleted.`,
                                icon: 'success'
                            }).then(() => {
                                window.location.href = `/Admin/session/OnPost?sessionId=${Id}`;
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire(
                                'Cancelled',
                                `"${SubjectName}" is safe.`,
                                'error'
                            );
                        }
                    });
                });
            });
        });
    </script>
}

 *@
