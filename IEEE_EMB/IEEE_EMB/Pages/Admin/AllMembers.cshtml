@page
@using IEEE_EMB.Models.Utilities
@model IEEE_EMB.Pages.Admin.AllMembersModel
@{
}
@{
    Layout = "~/Pages/Shared/DashLayout.cshtml";
}
<div class="container-xxl flex-grow-1 container-p-y">
    <!-- Add Assistants Button -->
    <div class="mb-4">
        <a href="/Admin/AddMember" class="btn btn-primary">Add Member</a>
    </div>

    <div class="card">
        <h5 class="card-header">All Members</h5>
        <div class="table-responsive text-nowrap">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>University</th>
                        <th>Status</th>
                        
                        <th>Actions</th>

                    </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                   
                      
                        @for (int i = 0; i < Model.dt.Rows.Count; i++)
                        {
                        <tr>
                            <td><strong>@Model.dt.Rows[i][6]</strong></td>
                            <td><strong>@Model.dt.Rows[i][4]</strong></td>
                            <td><strong>@Model.dt.Rows[i][10]</strong></td>
                            @if(Model.dt.Rows[i]["STATUS"].ToString() == @Status.Waiting){
                                <td>
                                    <form method="post" asp-page-handler="UpdateStatus">
                                        <input type="hidden" name="id" value="@Model.dt.Rows[i]["SSN"]" />
                                        <div class="split-button">
                                            <button type="submit" name="status" value="@Status.Approved" class="button-half accept-half">
                                                <span class="icon">✓</span>
                                                Accept
                                            </button>
                                            <div class="divider"></div>
                                            <button type="submit" name="status" value="@Status.Approved" class="button-half decline-half">
                                                <span class="icon">✕</span>
                                                Decline
                                            </button>
                                        </div>
                                    </form>
                                </td>
                            }
                            else
                            {
                                <td><strong>@Model.dt.Rows[i]["STATUS"]</strong></td>
                            }

                        <td>
                            <div class="dropdown">
                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item" href="/Admin/EditMember">
                                        <i class="bx bx-edit-alt me-1"></i> Edit
                                    </a>
                                    <a class="dropdown-item delete-btn"
                                       href="javascript:void(0);"
                                       data-id=""
                                       data-title="">
                                        <i class="bx bx-trash me-1"></i> Delete
                                    </a>
                                </div>
                            </div>
                        </td>
                        </tr>
                        }
                    
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Styles{
    
        <style>
            body {
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                margin: 0;
                background-color: #f5f5f5;
                font-family: system-ui, -apple-system, sans-serif;
            }

            .split-button {
                position: relative;
                display: flex;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: scale(0.9);
            }

            .button-half {
                padding: 8px 16px;
                border: none;
                cursor: pointer;
                font-size: 15px;
                font-weight: 500;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 8px;
            }

            .accept-half {
                background-color: #22c55e;
                color: white;
            }

            .decline-half {
                background-color: #ef4444;
                color: white;
            }

            .button-half:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            }

            .accept-half:hover {
                background-color: #16a34a;
            }

            .decline-half:hover {
                background-color: #dc2626;
            }

            .divider {
                width: 2px;
                background-color: rgba(255, 255, 255, 0.3);
            }

            /* Icons */
            .icon {
                font-size: 14px;
            }
        </style>
    
    
    
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Select all delete buttons
            const memberDeleteButtons = document.querySelectorAll('.delete-btn');

            memberDeleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    // Retrieve the title (name of the member) from the button's data-title attribute
                    const memberName = button.getAttribute('data-title') || "this member";

                    Swal.fire({
                        title: `Are you sure you want to delete "${memberName}"?`,
                        text: "This action won't actually delete anything!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire(
                                'Deleted!',
                                `"${memberName}" would have been deleted.`,
                                'success'
                            );
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire(
                                'Cancelled',
                                `"${memberName}" is safe.`,
                                'info'
                            );
                        }
                    });
                });
            });
        });
    </script>
}


